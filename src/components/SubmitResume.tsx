"use client";

import { useState } from 'react';

export default function SubmitResume() {
  const [formData, setFormData] = useState({
    name: '',
    telegram: '',
    phone: '',
    position: '',
    experience: '',
    message: '',
    file: null as File | null,
  });

  const [isSubmitting, setIsSubmitting] = useState(false);
  const [submitStatus, setSubmitStatus] = useState<{
    type: 'success' | 'error' | null;
    message: string;
  }>({ type: null, message: '' });

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));
  };

  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    if (e.target.files && e.target.files[0]) {
      setFormData(prev => ({
        ...prev,
        file: e.target.files![0]
      }));
    }
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setIsSubmitting(true);
    setSubmitStatus({ type: null, message: '' });

    try {
      const formPayload = new FormData();
      formPayload.append('name', formData.name);
      formPayload.append('telegram', formData.telegram);
      formPayload.append('phone', formData.phone);
      formPayload.append('position', formData.position);
      formPayload.append('experience', formData.experience);
      formPayload.append('message', formData.message);

      const response = await fetch('/api/submit-resume', {
        method: 'POST',
        body: formPayload,
      });

      if (!response.ok) {
        const error = await response.json();
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–µ–∑—é–º–µ:', error); // üîç –ª–æ–≥
        throw new Error(error.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ');
      }      

      setSubmitStatus({
        type: 'success',
        message: '–†–µ–∑—é–º–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.'
      });

      // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
      setFormData({
        name: '',
        telegram: '',
        phone: '',
        position: '',
        experience: '',
        message: '',
        file: null
      });
    } catch (error) {
      console.error('Error:', error);
      setSubmitStatus({
        type: 'error',
        message: error instanceof Error ? error.message : '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–µ–∑—é–º–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
      });
    } finally {
      setIsSubmitting(false);
    }
  };

  return (
    <section className="py-24 bg-gradient-to-r from-blue-50 to-indigo-50">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="bg-white rounded-2xl shadow-xl p-8 lg:p-12">
          <h1 className="text-4xl font-bold text-gray-900 mb-8">–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–∑—é–º–µ</h1>
          
          <div className="grid grid-cols-1 md:grid-cols-2 gap-12">
            <div className="info-section">
              <h2 className="text-2xl font-semibold text-gray-900 mb-6">–ü–æ—á–µ–º—É —Å—Ç–æ–∏—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å –Ω–∞–º–∏</h2>
              <div className="space-y-6">
                <div>
                  <h3 className="text-lg font-semibold text-indigo-600 mb-2">–ë—ã—Å—Ç—Ä—ã–π –æ—Ç–∫–ª–∏–∫</h3>
                  <p className="text-gray-600">
                    –ú—ã —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º –≤—Å–µ —Ä–µ–∑—é–º–µ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤ –∏ —Å–≤—è–∑—ã–≤–∞–µ–º—Å—è —Å –ø–æ–¥—Ö–æ–¥—è—â–∏–º–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞–º–∏
                  </p>
                </div>
                <div>
                  <h3 className="text-lg font-semibold text-indigo-600 mb-2">–õ—É—á—à–∏–µ —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–∏</h3>
                  <p className="text-gray-600">
                    –ú—ã —Å–æ—Ç—Ä—É–¥–Ω–∏—á–∞–µ–º —Ç–æ–ª—å–∫–æ —Å –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–º–∏ –∫–æ–º–ø–∞–Ω–∏—è–º–∏, –ø—Ä–µ–¥–ª–∞–≥–∞—é—â–∏–º–∏ –¥–æ—Å—Ç–æ–π–Ω—ã–µ —É—Å–ª–æ–≤–∏—è
                  </p>
                </div>
                <div>
                  <h3 className="text-lg font-semibold text-indigo-600 mb-2">–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–∞ –≤—Å–µ—Ö —ç—Ç–∞–ø–∞—Ö</h3>
                  <p className="text-gray-600">
                    –ü–æ–º–æ–≥–∞–µ–º –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è–º –∏ –∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–µ–º –ø–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º
                  </p>
                </div>
              </div>
            </div>

            <div className="form-section">
              <h2 className="text-2xl font-semibold text-gray-900 mb-6">–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É</h2>
              <form onSubmit={handleSubmit} className="space-y-6">
                <div>
                  <label htmlFor="name" className="block text-sm font-medium text-gray-700 mb-2">–ò–º—è</label>
                  <input
                    type="text"
                    id="name"
                    name="name"
                    required
                    value={formData.name}
                    onChange={handleInputChange}
                    className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-0 text-gray-900 placeholder:text-gray-400"
                    placeholder="–í–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è"
                  />
                </div>

                <div>
                  <label htmlFor="telegram" className="block text-sm font-medium text-gray-700 mb-2">Telegram</label>
                  <input
                    type="text"
                    id="telegram"
                    name="telegram"
                    required
                    value={formData.telegram}
                    onChange={handleInputChange}
                    className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-0 text-gray-900 placeholder:text-gray-400"
                    placeholder="@username"
                  />
                </div>

                <div>
                  <label htmlFor="phone" className="block text-sm font-medium text-gray-700 mb-2">–¢–µ–ª–µ—Ñ–æ–Ω</label>
                  <input
                    type="tel"
                    id="phone"
                    name="phone"
                    required
                    value={formData.phone}
                    onChange={handleInputChange}
                    className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-0 text-gray-900 placeholder:text-gray-400"
                    placeholder="+7 (999) 999-99-99"
                  />
                </div>

                <div>
                  <label htmlFor="position" className="block text-sm font-medium text-gray-700 mb-2">–ñ–µ–ª–∞–µ–º–∞—è —Ä–∞–±–æ—Ç–∞</label>
                  <input
                    type="text"
                    id="position"
                    name="position"
                    required
                    value={formData.position}
                    onChange={handleInputChange}
                    className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-0 text-gray-900 placeholder:text-gray-400"
                    placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ö–∞—Å—Å–∏—Ä, –û—Ñ–∏—Ü–∏–∞–Ω—Ç, –í–æ–¥–∏—Ç–µ–ª—å"
                  />
                </div>

                <div>
                  <label htmlFor="experience" className="block text-sm font-medium text-gray-700 mb-2">–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã</label>
                  <select
                    id="experience"
                    name="experience"
                    required
                    value={formData.experience}
                    onChange={handleInputChange}
                    className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-0 text-gray-900 placeholder:text-gray-400"
                  >
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã</option>
                    <option value="–ù–µ—Ç –æ–ø—ã—Ç–∞">–ù–µ—Ç –æ–ø—ã—Ç–∞</option>
                    <option value="–î–æ 1 –≥–æ–¥–∞">–î–æ 1 –≥–æ–¥–∞</option>
                    <option value="1-3 –≥–æ–¥–∞">1-3 –≥–æ–¥–∞</option>
                    <option value="3-5 –ª–µ—Ç">3-5 –ª–µ—Ç</option>
                    <option value="–ë–æ–ª–µ–µ 5 –ª–µ—Ç">–ë–æ–ª–µ–µ 5 –ª–µ—Ç</option>
                  </select>
                </div>

                <div>
                  <label htmlFor="message" className="block text-sm font-medium text-gray-700 mb-2">–°–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø–∏—Å—å–º–æ</label>
                  <textarea
                    id="message"
                    name="message"
                    rows={4}
                    value={formData.message}
                    onChange={handleInputChange}
                    className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-0 text-gray-900 placeholder:text-gray-400"
                    placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ –∏ —Å–≤–æ–∏—Ö –æ–∂–∏–¥–∞–Ω–∏—è—Ö"
                  ></textarea>
                </div>

                {submitStatus.type && (
                  <div className={`p-4 rounded-lg ${
                    submitStatus.type === 'success' ? 'bg-green-50 text-green-800' : 'bg-red-50 text-red-800'
                  }`}>
                    {submitStatus.message}
                  </div>
                )}

                <button
                  type="submit"
                  disabled={isSubmitting}
                  className={`w-full md:w-auto px-8 py-3 bg-indigo-600 text-white font-semibold rounded-lg hover:bg-indigo-700 transition-colors duration-300 shadow-lg shadow-indigo-200 hover:shadow-indigo-300 ${
                    isSubmitting ? 'opacity-75 cursor-not-allowed' : ''
                  }`}
                >
                  {isSubmitting ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–∑—é–º–µ'}
                </button>
              </form>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
}