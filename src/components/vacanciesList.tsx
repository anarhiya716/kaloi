'use client'

import { useState } from 'react'
import { useRouter } from 'next/navigation'

// –ó–¥–µ—Å—å –±—É–¥—É—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –≤–∞–∫–∞–Ω—Å–∏–∏
// –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∏—Ö –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å —Å –±—ç–∫–µ–Ω–¥–∞
const initialVacancies = [
  {
    id: 1,
    title: '–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º',
    company: '–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è',
    location: '–£–¥–∞–ª—ë–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞',
    salary: '150 000 - 200 000 ‚ÇΩ',
    type: '–ì–∏–±–∫–∏–π',
    description: '–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º',
    fullDescription: `
      –ö–æ–≥–æ –º—ã –∏—â–µ–º:

–ê–∫—Ç–∏–≤–Ω–æ–≥–æ –∏ —Ü–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª—ë–Ω–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—Ç –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∏ —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –≤ —Å—Ñ–µ—Ä–µ –ø—Ä–æ–¥–∞–∂. –ï—Å–ª–∏ —Ç—ã –æ–±—â–∏—Ç–µ–ª—å–Ω—ã–π, –≥–æ—Ç–æ–≤ —É—á–∏—Ç—å—Å—è –Ω–æ–≤–æ–º—É –∏ –Ω–µ –±–æ–∏—à—å—Å—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ ‚Äî –º—ã –∂–¥—ë–º —Ç–µ–±—è –≤ –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥–µ!

‚∏ª

–ß—Ç–æ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –¥–µ–ª–∞—Ç—å:
 ‚Ä¢ –û–±—â–∞—Ç—å—Å—è —Å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–º–∏ –∫–ª–∏–µ–Ω—Ç–∞–º–∏ (–æ–Ω–ª–∞–π–Ω: –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä—ã, –∑–≤–æ–Ω–∫–∏);
 ‚Ä¢ –ü—Ä–µ–∑–µ–Ω—Ç–æ–≤–∞—Ç—å –ø—Ä–æ–¥—É–∫—Ç –∏–ª–∏ —É—Å–ª—É–≥—É (–º—ã –æ–±—É—á–∏–º –∫–∞–∫);
 ‚Ä¢ –°–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–∞ –¥–æ —Å–¥–µ–ª–∫–∏;
 ‚Ä¢ –í–µ—Å—Ç–∏ –ø—Ä–æ—Å—Ç—É—é –æ—Ç—á—ë—Ç–Ω–æ—Å—Ç—å.

‚∏ª

–ß—Ç–æ –º—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º:
 ‚Ä¢ –î–æ—Ö–æ–¥ –æ—Ç 150 000 –¥–æ 200 000 —Ä—É–±. + –≤—ã—Å–æ–∫–∏–π % –æ—Ç —Å–¥–µ–ª–æ–∫;
 ‚Ä¢ –£–¥–∞–ª—ë–Ω–Ω—É—é —Ä–∞–±–æ—Ç—É –∏–∑ –ª—é–±–æ–π —Ç–æ—á–∫–∏ –º–∏—Ä–∞;
 ‚Ä¢ –ì–∏–±–∫–∏–π –≥—Ä–∞—Ñ–∏–∫ ‚Äî —Ä–∞–±–æ—Ç–∞–π, –∫–æ–≥–¥–∞ —É–¥–æ–±–Ω–æ;
 ‚Ä¢ –ü–æ—à–∞–≥–æ–≤–æ–µ –æ–±—É—á–µ–Ω–∏–µ —Å –Ω—É–ª—è (–≤ —Ç–æ–º —á–∏—Å–ª–µ –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤);
 ‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫—É –Ω–∞ –≤—Å–µ—Ö —ç—Ç–∞–ø–∞—Ö.

‚∏ª

–í–∞–∂–Ω–æ:
 ‚Ä¢ –í–æ–∑—Ä–∞—Å—Ç ‚Äî –æ—Ç 18 –ª–µ—Ç;
 ‚Ä¢ –£–≤–µ—Ä–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –∏ –Ω–∞–ª–∏—á–∏–µ –ü–ö –∏–ª–∏ –Ω–æ—É—Ç–±—É–∫–∞;
 ‚Ä¢ –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –æ–±—É—á–∞—Ç—å—Å—è –∏ –≤—ã–ø–æ–ª–Ω—è—Ç—å –∑–∞–¥–∞—á–∏.

‚∏ª

–•–æ—á–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–µ–±—è –≤ –ø—Ä–æ–¥–∞–∂–∞—Ö –∏ –ø–æ–ª—É—á–∞—Ç—å –¥–æ—Å—Ç–æ–π–Ω—ã–π –¥–æ—Ö–æ–¥?
–û—Ç–∫–ª–∏–∫–∞–π—Å—è –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å ‚Äî –Ω–∞—á–Ω—ë–º –æ–±—É—á–µ–Ω–∏–µ —É–∂–µ —Å–µ–≥–æ–¥–Ω—è!
    `
  },
  
]

export default function VacanciesList() {
  const [vacancies, setVacancies] = useState(initialVacancies)
  const [filter, setFilter] = useState('')
  const [selectedVacancy, setSelectedVacancy] = useState<typeof initialVacancies[0] | null>(null)

  const filteredVacancies = vacancies.filter(vacancy =>
    vacancy.title.toLowerCase().includes(filter.toLowerCase()) ||
    vacancy.company.toLowerCase().includes(filter.toLowerCase())
  )

  const router = useRouter()

  return (
    <div className="relative">
      <div className="mb-8">
        <input
          type="text"
          placeholder="–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏–ª–∏ –∫–æ–º–ø–∞–Ω–∏–∏..."
          value={filter}
          onChange={(e) => setFilter(e.target.value)}
          className="w-full max-w-md px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 placeholder:text-black focus:placeholder:text-transparent"
        />
      </div>

      <div className="grid gap-6">
        {filteredVacancies.map(vacancy => (
          <div 
            key={vacancy.id}
            onClick={() => setSelectedVacancy(vacancy)}
            className="bg-white p-6 rounded-lg border border-gray-200 hover:border-indigo-500 transition-all duration-200 cursor-pointer"
          >
            <div className="flex justify-between items-start mb-4">
              <div>
                <h2 className="text-xl font-semibold text-gray-900 mb-1">
                  {vacancy.title}
                </h2>
                <p className="text-gray-600">{vacancy.company}</p>
              </div>
              <span className="text-indigo-600 font-medium">
                {vacancy.salary}
              </span>
            </div>

            <div className="flex gap-4 mb-4">
              <span className="text-sm text-gray-500">üìç {vacancy.location}</span>
              <span className="text-sm text-gray-500">üíº {vacancy.type}</span>
            </div>

            <p className="text-gray-700 mb-4">
              {vacancy.description}
            </p>

            <button 
              onClick={(e) => {
                e.stopPropagation();
                router.push(`/submit-resume?id=${vacancy.id}&title=${encodeURIComponent(vacancy.title)}`);
              }}
              className="bg-indigo-600 text-white px-6 py-2 rounded-lg hover:bg-indigo-700 transition-colors"
            >
              –û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è
            </button>
          </div>
        ))}
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ */}
      {selectedVacancy && (
        <div className="fixed inset-0 backdrop-blur-sm bg-white/30 flex items-center justify-center p-4 z-50">
          <div 
            className="bg-white/95 rounded-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto shadow-xl"
            onClick={(e) => e.stopPropagation()}
          >
            <div className="sticky top-0 bg-white border-b border-gray-100 p-6 rounded-t-xl backdrop-blur-md bg-white/90">
              <div className="flex justify-between items-start">
                <div>
                  <h2 className="text-2xl font-bold text-gray-900 mb-2">
                    {selectedVacancy.title}
                  </h2>
                  <p className="text-lg text-gray-600">{selectedVacancy.company}</p>
                </div>
                <button
                  onClick={() => setSelectedVacancy(null)}
                  className="text-gray-400 hover:text-gray-600"
                >
                  <svg className="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                  </svg>
                </button>
              </div>
            </div>

            <div className="p-6">
              <div className="flex gap-4 mb-6">
                <span className="text-sm text-gray-500">üìç {selectedVacancy.location}</span>
                <span className="text-sm text-gray-500">üíº {selectedVacancy.type}</span>
                <span className="text-sm font-medium text-indigo-600">{selectedVacancy.salary}</span>
              </div>

              <div className="prose max-w-none">
                <pre className="whitespace-pre-wrap font-sans text-gray-700">
                  {selectedVacancy.fullDescription}
                </pre>
              </div>

              <div className="mt-8 flex justify-end">
                <button 
                  onClick={(e) => {
                    router.push(`/submit-resume?id=${selectedVacancy.id}&title=${encodeURIComponent(selectedVacancy.title)}`);
                  }}
                  className="bg-indigo-600 text-white px-8 py-3 rounded-lg hover:bg-indigo-700 transition-colors"
                >
                  –û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é
                </button>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  )
} 
